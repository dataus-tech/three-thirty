<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.ThreeThirty_BE.mapper.PostRepository">

  <resultMap id="postResultMap" type="com.example.ThreeThirty_BE.dto.PostResponseDto$Posts">
    <id property="post_id" column="post_id"/>
    <result property="post_writer" column="post_writer"/>
    <result property="post_content" column="post_content"/>
    <result property="update_date" column="update_date"/>
    <result property="like_count" column="like_count"/>
    <result property="hate_count" column="hate_count"/>
    <result property="comment_count" column="comment_count"/>
    <result property="company_title" column="company_title"/>

    <collection property="hashtag_content" ofType="java.lang.String">
      <result column="hashtag_content"/>
    </collection>

    <collection property="attach_file_url" ofType="java.lang.String">
      <result column="attach_file_url"/>
    </collection>
  </resultMap>

  <select id = "findPostType">
    select post_type
    from TB_POST_TYPE
    where post_type_title = #{post_type_title}
  </select>

  <select id = "findCompanyCode">
    select company_code
    from TB_COMPANY_TYPE
    where company_title = #{company_title}
  </select>

  <insert id="savePost" useGeneratedKeys="true" keyProperty="post_id">
    insert into TB_POST(post_type, company_code, post_content, post_writer)
    values (#{post_type}, #{company_code}, #{post_content}, #{post_writer})
  </insert>

  <insert id="saveAttachment" useGeneratedKeys="true" keyProperty="attach_file_id">
    INSERT INTO TB_POST_ATTACH (post_id, attach_file_url, attach_file_type_code)
    VALUES
    <foreach collection="list" item="attachment" separator=",">
      (#{attachment.post_id}, #{attachment.attach_file_url}, #{attachment.attach_file_type_code})
    </foreach>
  </insert>

  <insert id="saveHashing" useGeneratedKeys="true" keyProperty="hashtag_id">
    insert into TB_POST_HASHTAG(post_id, hashtag_content)
    values
    <foreach collection="list" item="postHashing" separator=",">
      (#{postHashing.post_id}, #{postHashing.hashtag_content})
    </foreach>
  </insert>

  <select id="findPost" resultMap="postResultMap">
    SELECT p.post_id,
    p.post_writer,
    p.post_content,
    p.update_date,
    p.like_count,
    p.hate_count,
    p.comment_count,
    c.company_title,
    (
    SELECT GROUP_CONCAT(hashtag_content)
    FROM TB_POST_HASHTAG
    WHERE post_id = p.post_id
    ) AS hashtag_content,
    (
    SELECT GROUP_CONCAT(attach_file_url)
    FROM TB_POST_ATTACH
    WHERE post_id = p.post_id
    ) AS attach_file_url
    FROM TB_POST p
    LEFT JOIN TB_COMPANY_TYPE c ON p.company_code = c.company_code
    WHERE p.delete_status = 0
  </select>

  <update id="deletePost">
    UPDATE TB_POST
    SET delete_status = 1, delete_date = CURRENT_TIMESTAMP
    where post_id = #{post_id}
  </update>
</mapper>