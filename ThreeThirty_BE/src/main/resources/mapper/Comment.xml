<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.ThreeThirty_BE.mapper.CommentRepository">

    <!-- resultType은 SQL 쿼리의 결과를 매핑할 Java 객체의 타입을 지정하는 것인데, resultType으로 매핑이 제대로 이루어지지 않아 resultMap을 사용하여 수동 매핑 -->
    <resultMap id="commentResultMap" type="com.example.ThreeThirty_BE.domain.Comment">
        <id property="comment_id" column="comment_id" />
        <result property="user_id" column="user_id" />
        <result property="post_id" column="post_id" />
        <result property="comment_content" column="comment_content" />
        <!--여기서 collection태그는 부모 객체와 자식 객체의 1:N or N:M관계 매핑을 위해서 사용-->
        <collection property="post_id" ofType="long">
            <result column="post_id"/>
        </collection>

        <collection property="user_id" ofType="long">
            <result column="user_id"/>
        </collection>
    </resultMap>

    <select id = "findComments" resultMap="commentResultMap">
        select comment_id, comment_content, user_id, post_id, create_date
        from TB_POST_COMMENT
        where post_id = #{post_id}
    </select>

    <select id = "findUserComment" resultMap="commentResultMap">
        select comment_content, user_id, post_id, create_date
        from TB_POST_COMMENT
        where user_id = #{user_id}
    </select>

    <!-- useGeneratedKeys: DB에 data를 삽입할 때 자동으로 생성된 키를 사용할 것인가를 결정, true로 지정하면 데이터 삽입 후 생ㅇ성된 키를 가져온다.-->
    <!-- keyProperty: 자동으로 생성된 기본키를 저장할 java객체의 어떤 필드로 지정할 것인가를 알려주는 녀석-->
    <!-- 주로 이 속성들은 자동증가 기본키를 가진 테이블에 사용된다. -->
    <insert id="saveComment" useGeneratedKeys="true" keyProperty="comment_id">
        INSERT INTO TB_POST_COMMENT (post_id, user_id, comment_content)
        values (#{post_id}, #{user_id}, #{comment_content})
    </insert>

    <update id="updateComment">
        update tb_post_comment
        set
            comment_content=#{comment_content}
        where comment_id = #{comment_id}
    </update>

    <update id="deleteComment">
        UPDATE TB_POST_COMMENT
        SET delete_status = 1, delete_date = CURRENT_TIMESTAMP
        where comment_id = #{comment_id}
    </update>

    <select id = "checkWriter">
        SELECT EXISTS
                   (SELECT 1
                    FROM TB_POST_COMMENT
                    WHERE user_id = #{user_id} and comment_id = #{comment_id})
    </select>

</mapper>